'use client';

import React, { useState } from 'react';

export default function FlowchartCreator() {
  const [status, setStatus] = useState<string>('');
  const [isProcessing, setIsProcessing] = useState(false);
  const [mermaidCode, setMermaidCode] = useState<string>('');
  const [error, setError] = useState<string>('');

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    const formData = new FormData(e.currentTarget);
    const fileInput = e.currentTarget.elements.namedItem('document') as HTMLInputElement;

    if (!fileInput || !fileInput.files || fileInput.files.length === 0) {
      alert('Please select a DOCX file');
      return;
    }

    setIsProcessing(true);
    setStatus('Processing...');
    setMermaidCode('');
    setError('');

    try {
      const response = await fetch('http://localhost:3003/api/create-flowchart', {
        method: 'POST',
        body: formData,
      });

      const result = await response.json();

      if (!response.ok) {
        throw new Error(result.error || `HTTP error! status: ${response.status}`);
      }

      if (result.mermaid_code) {
        setMermaidCode(result.mermaid_code);
        setStatus('Flowchart code generated successfully!');
      } else {
        throw new Error('Invalid response format from server.');
      }

      setTimeout(() => setStatus(''), 5000);

    } catch (err) {
      console.error('Error:', err);
      const errorMessage = err instanceof Error ? err.message : 'Unknown error occurred';
      setError(`Error: ${errorMessage}`);
      setStatus('');
    } finally {
      setIsProcessing(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <h1 className="text-3xl font-bold text-gray-900 mb-8">Flowchart Creator</h1>
        
        <div className="bg-white rounded-lg shadow-lg p-8 mb-8">
          <h2 className="text-xl font-semibold text-gray-900 mb-4">How to Use</h2>
          <div className="space-y-4 text-gray-600">
            <p>This tool generates Mermaid flowchart code from a Word document (.docx) containing process descriptions (likely generated by the Transcript Processor tool).</p>
            <ol className="list-decimal list-inside space-y-2">
              <li>Ensure your Word document contains the process descriptions you want to visualize.</li>
              <li>Upload the .docx file using the form below.</li>
              <li>Click "Generate Flowchart Code".</li>
              <li>The generated Mermaid code will appear below. You can copy this code and use it in tools or websites that support Mermaid rendering (e.g., Mermaid Live Editor, Obsidian, some documentation platforms).</li>
            </ol>
            
            <p className="font-bold text-red-600 mt-6 border border-red-200 p-4 bg-red-50 rounded-md">
              <span className="underline">Disclaimer:</span> The content generated by this tool utilizes an AI model that, while powerful, may occasionally produce errors or inaccuracies in the flowchart structure or content. Always review the generated code and the resulting visual flowchart for correctness before relying on it.
            </p>
          </div>
        </div>

        <div className="bg-white rounded-lg shadow-lg p-8">
          <form onSubmit={handleSubmit} className="space-y-6">
            <div className="space-y-2">
              <label htmlFor="document" className="block text-sm font-medium text-gray-700">
                Upload Word Document (.docx)
              </label>
              <input
                type="file"
                id="document"
                name="document"
                accept=".docx"
                className="block w-full text-sm text-gray-500
                         file:mr-4 file:py-2 file:px-4
                         file:rounded-md file:border-0
                         file:text-sm file:font-semibold
                         file:bg-blue-50 file:text-blue-700
                         hover:file:bg-blue-100"
              />
            </div>

            <button
              type="submit"
              disabled={isProcessing}
              className="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50"
            >
              {isProcessing ? 'Processing...' : 'Generate Flowchart Code'}
            </button>
          </form>

          {status && (
            <div className={`mt-4 text-sm text-green-600`}>
              {status}
            </div>
          )}
          {error && (
            <div className={`mt-4 text-sm text-red-600`}>
              {error}
            </div>
          )}

          {mermaidCode && (
            <div className="mt-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-2">Generated Mermaid Code:</h3>
              <pre className="bg-gray-100 p-4 rounded-md text-sm text-gray-800 overflow-x-auto">
                <code>{mermaidCode}</code>
              </pre>
              <button
                 onClick={() => navigator.clipboard.writeText(mermaidCode)}
                 className="mt-2 py-1 px-3 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500"
               >
                 Copy Code
              </button>
            </div>
          )}
        </div>
      </div>
    </div>
  );
} 